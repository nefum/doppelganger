/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/uKrxPB136RF
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

 import { Inter } from 'next/font/google'

 inter({
 subsets: ['latin'],
 display: 'swap',
 })

 To read more about using these font, please visit the Next.js documentation:
 - App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
 - Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
 **/
import {
  DeviceCardSnapshotClient,
  PARENT_DIV_CLASSES,
} from "@/components/device-cards/device-card-snapshot-client";
import { Card } from "@/components/ui/card";
import { clsx } from "clsx";
import { Suspense } from "react";

import { getSnapshotUrlOfDevice } from "@/app/(strict-mode)/(userland)/devices/[id]/snapshot/path.ts";
import { getRedroidImageByName } from "@/app/utils/redroid/redroid-images.ts";
import DeleteDeviceButton from "@/components/device-cards/delete-device-button.tsx";
import EditDeviceButton from "@/components/device-cards/edit-device-button.tsx";
import { Button } from "@/components/ui/button.tsx";
import { toTitleCase } from "@/utils/misc.ts";
import { Device, DeviceState } from "@prisma/client";
import { SettingsIcon } from "lucide-react";
import Link from "next/link";
import { IoPhonePortraitOutline } from "react-icons/io5";

export function DeviceCard({ deviceInfo }: Readonly<{ deviceInfo: Device }>) {
  return (
    <div className="w-full p-3">
      <Card className="w-full max-w-sm">
        <div className="grid grid-cols-[1fr_200px] gap-6 p-4">
          <div className="space-y-4">
            <div className="space-y-1">
              <h3 className="text-2xl font-semibold">{deviceInfo.name}</h3>
              <div className="flex items-center gap-2 text-muted-foreground">
                <div
                  className={clsx("h-2 w-2 rounded-full", {
                    "bg-green-500": deviceInfo.lastState === DeviceState.ON,
                    "bg-red-500": deviceInfo.lastState === DeviceState.OFF,
                    "bg-yellow-500":
                      deviceInfo.lastState === DeviceState.SUSPENDED,
                    "bg-gray-500":
                      deviceInfo.lastState === DeviceState.UNAVAILABLE,
                  })}
                />
                <span>{toTitleCase(deviceInfo.lastState)}</span>
              </div>
            </div>
            <div className="space-y-1">
              <h4 className="text-sm font-medium">Type</h4>
              <p className="text-muted-foreground">
                {getRedroidImageByName(deviceInfo.redroidImage)?.name ??
                  "Unknown"}
              </p>
            </div>
            <div className="space-y-1">
              <h4 className="text-sm font-medium">Max FPS</h4>
              <p className="text-muted-foreground">{deviceInfo.redroidFps}</p>
            </div>
            {/*TODO: buttons for the device card*/}
            <div className="grid grid-cols-2 gap-2">
              <Button variant="ghost" size="icon" asChild>
                <Link href={`/devices/${deviceInfo.id}/ios`}>
                  <IoPhonePortraitOutline className="h-5 w-5" />
                  <span className="sr-only">Open Mobile-Optimized Client</span>
                </Link>
              </Button>
              <Button variant="ghost" size="icon">
                <SettingsIcon className="h-5 w-5" />
                <span className="sr-only">Settings</span>
              </Button>
              <EditDeviceButton deviceInfo={deviceInfo} />
              <DeleteDeviceButton deviceInfo={deviceInfo} />
            </div>
          </div>
          {/*because of the loading nightmare this snapshot is, we need to preload it manually*/}
          <link rel="prefetch" href={getSnapshotUrlOfDevice(deviceInfo.id)} />
          <Suspense
            fallback={
              <div className={clsx(PARENT_DIV_CLASSES, "animate-pulse")} />
            }
          >
            <DeviceCardSnapshotClient
              deviceName={deviceInfo.name}
              id={deviceInfo.id}
            />
          </Suspense>
        </div>
      </Card>
    </div>
  );
}
